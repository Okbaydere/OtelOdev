@model Entities.Concreate.RoomType
@{
    ViewBag.Title = Model.TypeName;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var rooms = ViewBag.Rooms as List<Entities.Concreate.Rooms>;

    string imageUrl;
    switch (Model.TypeName.ToLower())
    {
        case "kral dairesi":
            imageUrl = "https://images.unsplash.com/photo-1590490360182-c33d57733427?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80";
            break;
        case "suit oda":
            imageUrl = "https://images.unsplash.com/photo-1578683010236-d716f9a3f461?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80";
            break;
        case "çift kişilik oda":
            imageUrl = "https://images.unsplash.com/photo-1566665797739-1674de7a421a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80";
            break;
        case "tek kişilik oda":
            imageUrl = "https://images.unsplash.com/photo-1631049307264-da0ec9d70304?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1170&q=80";
            break;
        default:
            imageUrl = "https://images.unsplash.com/photo-1566073771259-6a8506099945?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1470&q=80";
            break;
    }
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-6">
            <img src="@imageUrl"
                 class="img-fluid rounded shadow" alt="@Model.TypeName" style="max-height: 400px; width: 100%; object-fit: cover;">
        </div>
        <div class="col-md-6">
            <h1 class="mb-4">@Model.TypeName</h1>
            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Oda Bilgileri</h5>
                    <ul class="list-group list-group-flush">
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Fiyat
                            <span class="badge bg-primary rounded-pill">@(Model.TypePrice.HasValue ? Model.TypePrice.Value.ToString("N0") + " ₺" : "Fiyat Belirtilmemiş") / gece</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            Kapasite
                            <span class="badge bg-primary rounded-pill">@Model.Capacity kişi</span>
                        </li>
                        <li class="list-group-item">
                            <strong>Özellikler:</strong><br />
                            @foreach (var feature in Model.Features.Split(','))
                            {
                                <span class="badge bg-info me-2 mb-2">@feature.Trim()</span>
                            }
                        </li>
                    </ul>
                </div>
            </div>

            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Oda Açıklaması</h5>
                    <p class="card-text">@Model.Description</p>
                </div>
            </div>

            <div class="card shadow-sm mt-4">
                <div class="card-body">
                    <h5 class="card-title">Rezervasyon Tarihleri</h5>
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="enterDate">Giriş Tarihi:</label>
                                <input type="date" id="enterDate" class="form-control" required>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                <label for="exitDate">Çıkış Tarihi:</label>
                                <input type="date" id="exitDate" class="form-control" required>
                            </div>
                        </div>
                    </div>
                    <div id="dateValidationMessage" class="text-danger mb-3" style="display: none;"></div>
                </div>
            </div>

            <div class="mt-4">
                <button id="makeReservation" class="btn btn-success btn-lg w-100" disabled>Rezervasyon Yap</button>
                <a href="@Url.Action("Index", "Rooms")" class="btn btn-outline-secondary w-100 mt-2">Tüm Odaları Görüntüle</a>
            </div>
        </div>
    </div>



    <div class="row mt-5 mb-5">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Rezervasyon Bilgileri</h5>
                    <p class="card-text">
                        Rezervasyon yapmak için yukarıdaki "Rezervasyon Yap" butonuna tıklayabilirsiniz.
                        Rezervasyon işleminiz için giriş ve çıkış tarihlerini seçmeniz ve kişisel bilgilerinizi girmeniz gerekmektedir.
                    </p>
                    <p class="card-text">
                        <strong>Not:</strong> Rezervasyon iptali için lütfen en az 24 saat öncesinden haber veriniz.
                    </p>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('.card').addClass('animate__animated animate__fadeIn');

            var today = new Date().toISOString().split('T')[0];
            $("#enterDate").attr('min', today);
            $("#exitDate").attr('min', today);

            function validateDates() {
                var enterDate = new Date($("#enterDate").val());
                var exitDate = new Date($("#exitDate").val());
                var today = new Date();
                today.setHours(0, 0, 0, 0);
                var $message = $("#dateValidationMessage");
                var $reservationButton = $("#makeReservation");

                if (isNaN(enterDate.getTime()) || isNaN(exitDate.getTime())) {
                    $message.hide();
                    $reservationButton.prop('disabled', true);
                    return false;
                }

                if (enterDate < today) {
                    $message.text("Giriş tarihi bugünden önce olamaz!").show();
                    $reservationButton.prop('disabled', true);
                    return false;
                }

                if (exitDate <= enterDate) {
                    $message.text("Çıkış tarihi giriş tarihinden sonra olmalıdır!").show();
                    $reservationButton.prop('disabled', true);
                    return false;
                }

                checkRoomAvailability();
                return true;
            }

            function checkRoomAvailability() {
                var enterDate = $("#enterDate").val();
                var exitDate = $("#exitDate").val();
                var roomTypeId = '@Model.RoomTypeId';
                var $message = $("#dateValidationMessage");
                var $reservationButton = $("#makeReservation");

                $message.removeClass("text-danger text-success")
                    .addClass("text-muted")
                    .text("Oda müsaitliği kontrol ediliyor...")
                    .show();

                $.ajax({
                    url: '@Url.Action("GetAvailableRooms", "Reservation")',
                    type: 'GET',
                    data: {
                        roomTypeId: roomTypeId,
                        startDate: enterDate,
                        endDate: exitDate
                    },
                    success: function (data) {
                        if (data.success) {
                            if (data.rooms && data.rooms.length > 0) {
                                $message.removeClass("text-muted text-danger")
                                    .addClass("text-success")
                                    .text("Seçilen tarihler için uygun oda bulundu!")
                                    .show();
                                $reservationButton.prop('disabled', false);
                            } else {
                                $message.removeClass("text-muted text-success")
                                    .addClass("text-danger")
                                    .text("Seçilen tarih aralığında uygun oda bulunamadı.")
                                    .show();
                                $reservationButton.prop('disabled', true);
                            }
                        } else {
                            $message.removeClass("text-muted text-success")
                                .addClass("text-danger")
                                .text("Hata: " + (data.message || "Oda müsaitliği kontrol edilemedi."))
                                .show();
                            $reservationButton.prop('disabled', true);
                        }
                    },
                    error: function () {
                        $message.removeClass("text-muted text-success")
                            .addClass("text-danger")
                            .text("Sunucu hatası: Oda müsaitliği kontrol edilemedi.")
                            .show();
                        $reservationButton.prop('disabled', true);
                    }
                });
            }

            $("#enterDate, #exitDate").change(validateDates);

            $("#makeReservation").click(function() {
                if (validateDates()) {
                    var enterDate = $("#enterDate").val();
                    var exitDate = $("#exitDate").val();
                    window.location.href = '@Url.Action("Create", "Reservation")?roomTypeId=@Model.RoomTypeId&enterDate=' + enterDate + '&exitDate=' + exitDate;
                }
            });
        });
    </script>
}