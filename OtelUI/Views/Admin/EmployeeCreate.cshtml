@model Entities.Concreate.Employees
@{
    ViewBag.Title = "Personel Ekle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <h2>Yeni Personel Ekle</h2>
    
    <div class="mb-3">
        <a href="@Url.Action("Employees", "Admin")" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Personel Listesine Dön
        </a>
    </div>
    
    <div class="card mb-4">
        <div class="card-header">
            <i class="fas fa-user-plus mr-1"></i>
            Personel Bilgileri
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeFirstName, "Adı", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeFirstName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeFirstName, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeLastName, "Soyadı", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeLastName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeLastName, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeNumber, "Personel Numarası", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeNumber, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeNumber, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeMail, "E-posta", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeMail, new { htmlAttributes = new { @class = "form-control", type = "email", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeMail, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeTask, "Görevi", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeTask, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeTask, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.Salary, "Maaş", new { @class = "control-label" })
                                @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.01", required = "required" } })
                                @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeeUserName, "Kullanıcı Adı", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeeUserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeeUserName, "", new { @class = "text-danger" })
                            </div>
                            
                            <div class="form-group">
                                @Html.LabelFor(model => model.EmployeePassword, "Şifre", new { @class = "control-label" })
                                @Html.EditorFor(model => model.EmployeePassword, new { htmlAttributes = new { @class = "form-control", type = "password", required = "required" } })
                                @Html.ValidationMessageFor(model => model.EmployeePassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                @Html.EditorFor(model => model.IsActive)
                                Aktif
                            </label>
                        </div>
                    </div>
                    
                    <div class="form-group">
                        <input type="submit" value="Kaydet" class="btn btn-primary" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
